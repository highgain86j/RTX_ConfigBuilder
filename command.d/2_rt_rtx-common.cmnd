cooperation $type $role $sw
cooperation bandwidth-measuring remote $id $role $address [$option=$value]
cooperation load-watch control $id high=$high [raise=$raise] low=$low [lower=$lower] [$option=$value]
cooperation load-watch remote $id $role $address [$option=$value]
cooperation load-watch trigger $id $point high=$high [, $count] low=$low [, $count] [$option=$value]
cooperation port $port
dhcp client client-identifier $interface primary [type $type] $id
dhcp client client-identifier $interface secondary [type $type] $id
dhcp client client-identifier pool $pool_num [type $type] $id
dhcp client hostname $interface primary $host
dhcp client hostname $interface secondary $host
dhcp client hostname pool $pool_num $host
dhcp client option $interface primary $option=$value
dhcp client option $interface secondary $option=$value
dhcp client option pool $pool_num $option=$value
dhcp client release linkdown $switch [$time]
dhcp convert lease to bind $scope_n [except] [$idx [...]]
dhcp duplicate check $check1 $check2
dhcp manual lease $ip_address $mac_address
dhcp manual lease $ip_address ipcp
dhcp manual release $ip_address
dhcp relay select $type
dhcp relay server $host1 [$host2 [$host3 [$host4]]]
dhcp relay threshold $time
dhcp scope $scope_num $ip_address-ip_address/$netmask [except $ex_ip ...] [gateway $gw_ip] [expire $time] [maxexpire $time]
dhcp scope bind $scope_num $ip_address $mac_address
dhcp scope bind $scope_num $ip_address ipcp
dhcp scope lease type $scope_num $type [fallback=$fallback_scope_num]
dhcp scope option $scope_num $option=$value
dhcp server rfc2131 compliant $comp
dhcp server rfc2131 compliant [except] $function [$function..]
dhcp service $type
dns cache max entry $num
dns cache use $switch
dns domain $domain_name
dns host $ip_range [$ip_range [...]]
dns notice order $protocol $server [$server]
dns private address spoof $spoof
dns server $ip_address [$ip_address...]
dns server pp $peer_num
dns server select $id $server [$server2] [$type] $query [$original-sender] [restrict pp $connection-pp]
dns server select $id dhcp $interface [$default-server] [$type] $query [$original-sender] [restrict pp $connection-pp]
dns server select $id reject [$type] $query [$original-sender]
dns service $service
dns service fallback $switch
dns srcport $port[$port]
ethernet filter $num $kind $src_mac [$dst_mac [$offset $byte_list]]
ethernet filter $num $kind $type [$scope] [$offset $byte_list]
external-memory accelerator cache size $interface $size
external-memory auto-search time $time
external-memory batch filename $batchfile [$logfile]
external-memory boot permit $switch
external-memory boot timeout $time
external-memory cache mode $mode
external-memory config filename $from[,$from] [$to] [$password]
external-memory exec filename $from [$to]
external-memory performance-test go $interface
ip $interface arp log $switch
ip $interface arp queue length $len
ip $interface intrusion detection $direction [$type] $switch [$option]
ip $interface intrusion detection notice-interval $frequency
ip $interface intrusion detection repeat-control $time
ip $interface intrusion detection report $num
ip $interface intrusion detection threshold $type $count
ip $interface mtu $mtu0
ip $interface proxyarp $proxyarp
ip $interface rebound $switch
ip $interface rip auth key $hex_key
ip $interface rip auth key text $text_key
ip $interface rip auth type $type
ip $interface rip filter $direction $filter_list
ip $interface rip force-to-advertise $ip-address/$netmask [metric $metric]
ip $interface rip hop $direction $hop
ip $interface rip receive $receive [version $version [$version]]
ip $interface rip send $send [version $version [$broadcast]]
ip $interface rip trust gateway [except] $gateway [$gateway...]
ip $interface secondary address $ip_address[/$mask]
ip $interface secondary address dhcp
ip $interface secure filter $direction [$filter_list...] [dynamic $filter_list...]
ip $interface secure filter name $set_name
ip $interface tcp mss limit $mss
ip pp rip connect interval $time
ip pp rip connect send $rip_action
ip pp rip disconnect interval $time
ip pp rip disconnect send $rip_action
ip pp rip hold routing $rip_hold
ip route $network gateway $gateway1 [$parameter] [gateway $gateway2 [$parameter]...]
ip route change log $log
ip routing $routing
ip simple-service $service
ipv6 $interface address $ipv6_address/$prefix_len [$address_type]
ipv6 $interface address auto
ipv6 $interface address dhcp
ipv6 $interface dad retry count $count
ipv6 $interface dhcp service $type
ipv6 $interface dhcp service client [ir=$value]
ipv6 $interface mld $type [$option ...]
ipv6 $interface mld static $group [$filter_mode [$source...]]
ipv6 $interface mtu $mtu
ipv6 $interface prefix $ipv6_prefix/$prefix_len
ipv6 $interface prefix $proxy
ipv6 $interface prefix change log $log
ipv6 $interface rip filter $direction $filter_list [$filter_list...]
ipv6 $interface rip hop $direction $hop
ipv6 $interface rip receive $receive
ipv6 $interface rip send $send
ipv6 $interface rip trust gateway [except] $gateway [$gateway...]
ipv6 $interface rtadv send $prefix_id [$prefix_id...] [$option=$value...]
ipv6 $interface secure filter $direction [$filter_list...] [dynamic $filter_list]
ipv6 $interface tcp mss limit $mss
ipv6 max auto address $max
ipv6 nd ns-trigger-dad on [$option=$value]
ipv6 pp rip connect interval $time
ipv6 pp rip connect send $action
ipv6 pp rip disconnect interval $time
ipv6 pp rip disconnect send $action
ipv6 pp rip hold routing $hold
ipv6 prefix $prefix_id $prefix/$prefix_len [preferred_lifetime=$time] [valid_lifetime=$time] [l_flag=$switch] [a_flag=$switch]
ipv6 prefix $prefix_id $proxy [preferred_lifetime=$time] [valid_lifetime=$time] [l_flag=$switch] [a_flag=$switch]
ipv6 rh0 discard $switch
ipv6 rip use $use
ipv6 route $network gateway $gateway [$parameter] [gateway $gateway [$parameter]]
ipv6 routing $routing
ipv6 routing process $process
ipv6 source address selection rule $rule
isdn auto connect $auto
isdn call block time $time
isdn call permit $permit
isdn call prohibit time $time
isdn callback mscbcp user-specify $specify
isdn callback permit $callback_permit
isdn callback permit type $type1 [$type2]
isdn callback request $callback_request
isdn callback request type $type
isdn callback response time $type $time
isdn callback wait time $time
isdn disconnect input time $time
isdn disconnect interval time $unit $watch $spare
isdn disconnect output time $time
isdn disconnect policy $type
isdn disconnect time $time
isdn fast disconnect time $time
isdn forced disconnect time $time
isdn local address $interface $isdn_num[/$sub_address]]
isdn local address $interface /$sub_address
isdn piafs arrive $arrive
isdn piafs call $speed [$64kmode]
isdn piafs control $switch
isdn remote address $call_arrive $isdn_num [$isdn_num_list]
isdn remote call order $order
mail server name $id $name
mail server pop $id $address [port=$port] $protocol $username $password
mail server smtp $id $address [port=$port] [smtp-auth $username $password [$auth_protocol]] [pop-before-smtp]
mail server timeout $id $timeout
mobile access limit connection length $length [alert=$alert]
mobile access limit connection time $time [alert=$alert]
mobile access limit duration $duration
mobile access limit length $length [alert=$alert[,$alert_cancel]]
mobile access limit time $time [alert=$alert[,$alert_cancel]] [unit=$unit]
mobile auto connect $auto
mobile call prohibit auth-error count $count
mobile dial number $dial_string
mobile disconnect input time $time
mobile disconnect output time $time
mobile disconnect time $time
mobile display caller id $switch
mobile pin code $interface $pin
mobile signal-strength $switch [$option=$value]
mobile syslog $switch
mobile use $interface $use [first-connect-wait-time=$time]
nat descriptor address inner $nat_descriptor $inner_ipaddress_list
nat descriptor address outer $nat_descriptor $outer_ipaddress_list
nat descriptor ftp port $nat_descriptor $port [$port...]
nat descriptor log $switch
nat descriptor masquerade incoming $nat_descriptor $action [$ip_address]
nat descriptor masquerade remove df-bit $remove
nat descriptor masquerade rlogin $nat_descriptor $use
nat descriptor masquerade session limit $nat_descriptor $id $limit
nat descriptor masquerade static $nat_descriptor $id $inner_ip $protocol [$outer_port=]$inner_port
nat descriptor masquerade unconvertible port $nat_descriptor $protocol $port
nat descriptor sip $nat_descriptor $sip
nat descriptor static $nat_descriptor $id $outer_ip=$inner_ip [$count]
nat descriptor static $nat_descriptor $id $outer_ip=$inner_ip/$netmask
nat descriptor timer $nat_descriptor $time
nat descriptor timer $nat_descriptor protocol=$protocol [port=$port_range] $time
nat descriptor timer $nat_descriptor tcpfin $time2
nat descriptor type $nat_descriptor $type
netvolante-dns auto hostname $interface $switch
netvolante-dns auto hostname pp $switch
netvolante-dns auto save [server=$server_num] $file
netvolante-dns delete go $interface [$host]
netvolante-dns delete go pp $peer_num [$host]
netvolante-dns get hostname list $interface
netvolante-dns get hostname list pp $peer_num
netvolante-dns go $interface
netvolante-dns go pp $peer_num
netvolante-dns hostname host $interface $host [duplicate]
netvolante-dns hostname host pp $host [duplicate]
netvolante-dns port $port
netvolante-dns register timer [server=$server_num] $time
netvolante-dns retry interval $interface $interval $count
netvolante-dns retry interval pp $interval $count
netvolante-dns server $ip_address
netvolante-dns server $name
netvolante-dns server update address port [server=$server_num] $port
netvolante-dns server update address use [server=$server_num] $switch
netvolante-dns set hostname $interface serial
netvolante-dns timeout $interface $time
netvolante-dns timeout pp $time
netvolante-dns use $interface $switch
netvolante-dns use pp $switch
pp auth multi connect prohibit $prohibit
pp auth myname $myname $password
ppp ccp maxconfigure $count
ppp ccp maxfailure $count
ppp ccp maxterminate $count
ppp ccp restart $time
ppp ccp type $type
ppp chap maxchallenge $count
ppp chap restart $time
ppp ipcp ipaddress $negotiation
ppp ipcp maxconfigure $count
ppp ipcp maxfailure $count
ppp ipcp maxterminate $count
ppp ipcp msext $msext
ppp ipcp remote address check $sw
ppp ipcp restart $time
ppp ipcp vjc $compression
ppp ipv6cp use $use
ppp lcp acfc $acfc
ppp lcp magicnumber $magicnumber
ppp lcp maxconfigure $count
ppp lcp maxfailure $count
ppp lcp maxterminate $count
ppp lcp mru $mru [$length]
ppp lcp pfc $pfc
ppp lcp restart $time
ppp lcp silent $switch
ppp mp control $type
ppp mp divide $divide
ppp mp load threshold $call_load $call_count $disc_load $disc_count
ppp mp maxlink $number
ppp mp minlink $number
ppp mp timer $time
ppp mp use $use
ppp mscbcp maxretry $count
ppp mscbcp restart $time
ppp pap maxauthreq $count
ppp pap restart $time
scp [[$user@]$host:]$file1 [[$user@]$host:]$file2 [$port]
security class $level $forget [$telnet [$ssh]]
set $name=$value
sftpd host $ip_range [$ip_range ...]
show config $filename
show config ap [$ap]
show config switch [$switch]
show ip intrusion detection $interface [$direction]
show ip intrusion detection pp [$peer_num [$direction]]
show ip intrusion detection tunnel [$tunnel_num [$direction]]
show ip route [$destination]
show ipv6 connection pp [$peer_num [$direction]]
show ipv6 connection tunnel [$tunnel_num [$direction]]
show nat descriptor address [$nat_descriptor] [detail]
show nat descriptor interface address $interface
show nat descriptor interface address pp $peer_num
show nat descriptor interface address tunnel $tunnel_num
show nat descriptor interface bind $interface
show nat descriptor masquerade port [$nat_descriptor] summary
show pp connect time [$peer_num]
show status $interface
show status boot [$num]
show status cooperation $type [$id]
show status dhcp [summary] [$scope_n]
show status mail service [$template_id] [debug]
show status netvolante-dns $interface
show status netvolante-dns pp [$peer_num]
show status packet-buffer [$group]
show status pp [$peer_num]
show status qos $info [$interface [$class]]
show status switch control $interface
show status switch control route backup $route
show status switching-hub macaddress [$interface [$port]] [$mac_address]
show status vlan [$interface/$sub_interface]
snmp community read-only $name
snmp community read-write $name
snmp display ipcp force $switch
snmp host $host [$ro_community [$rw_community]]
snmp ifindex switch static index $index $switch
snmp local address $ip_address
snmp syscontact $name
snmp syslocation $name
snmp sysname $name
snmp trap community $name
snmp trap enable snmp $trap [$trap...]
snmp trap enable switch $switch $trap [$trap...]
snmp trap enable switch $switch all
snmp trap enable switch $switch none
snmp trap enable switch common $trap [$trap...]
snmp trap host $host [$community]
snmp trap link-updown separate-l2switch-port $interface $switch
snmp trap mobile signal-strength $switch [$level]
snmp trap send linkdown $interface $switch
snmp trap send linkdown pp $peer_num $switch
snmp trap send linkdown tunnel $tunnel_num $switch
snmp yrifppdisplayatmib2 $switch
snmp yrifswitchdisplayatmib2 $switch
snmp yriftunneldisplayatmib2 $switch
snmp yrswindex switch static index $index $switch
snmpv2c community read-only $name
snmpv2c community read-write $name
snmpv2c host $host [$ro_community [$rw_community]]
snmpv2c trap community $name
snmpv2c trap host $host [$type [$community]]
snmpv3 context name $name
snmpv3 engine id $engine_id
snmpv3 host $host user $user_id ...
snmpv3 trap host $host [$type] user $user_id
snmpv3 usm user $user_id $name [group $group_id] [$auth $auth_pass [$priv $priv_pass]]
snmpv3 vacm access $group_id read $read_view write $write_view
snmpv3 vacm view $view_id $type $oid [$type $oid ...]
sntpd host $host
sntpd service $switch
switch control function execute clear-counter [$switch]
switch control function execute clear-macaddress-table [$switch]
switch control function get counter-frame-rx-type $port $counter [$switch]
switch control function get counter-frame-tx-type $port $counter [$switch]
switch control function get energy-saving [$switch]
switch control function get firmware-revision [$switch]
switch control function get led-brightness [$switch]
switch control function get loopdetect-count [$switch]
switch control function get loopdetect-linkdown [$switch]
switch control function get loopdetect-port-use $port [$switch]
switch control function get loopdetect-recovery-timer [$switch]
switch control function get loopdetect-time [$switch]
switch control function get loopdetect-use-control-packet [$switch]
switch control function get macaddress-aging [$switch]
switch control function get macaddress-aging-timer [$switch]
switch control function get mirroring-dest [$switch]
switch control function get mirroring-src-rx $port [$switch]
switch control function get mirroring-src-tx $port [$switch]
switch control function get mirroring-use [$switch]
switch control function get model-name [$switch]
switch control function get poe-class $port [$switch]
switch control function get port-auto-crossover $port [$switch]
switch control function get port-blocking-control-packet $port [$switch]
switch control function get port-blocking-data-packet $port [$switch]
switch control function get port-flow-control $port [$switch]
switch control function get port-speed $port [$switch]
switch control function get port-speed-downshift $port [$switch]
switch control function get port-use $port [$switch]
switch control function get qos-dscp-remark-class $port [$switch]
switch control function get qos-dscp-remark-type $port [$switch]
switch control function get qos-policing-speed $port [$switch]
switch control function get qos-policing-use $port [$switch]
switch control function get qos-shaping-speed $port [$switch]
switch control function get qos-shaping-use $port [$switch]
switch control function get qos-speed-unit [$switch]
switch control function get serial-number [$switch]
switch control function get status-counter-frame-rx $port $counter [$switch]
switch control function get status-counter-frame-tx $port $counter [$switch]
switch control function get status-counter-octet-rx $port [$switch]
switch control function get status-counter-octet-tx $port [$switch]
switch control function get status-fan [$switch]
switch control function get status-fan-rpm $FAN [$switch]
switch control function get status-led-mode [$switch]
switch control function get status-loopdetect-port $port [$switch]
switch control function get status-loopdetect-recovery-timer $port [$switch]
switch control function get status-macaddress-addr $mac_address [$switch]
switch control function get status-macaddress-port $port [$switch]
switch control function get status-poe-detect-class $port [$switch]
switch control function get status-poe-state $port [$switch]
switch control function get status-poe-supply $port [$switch]
switch control function get status-poe-temperature [$switch]
switch control function get status-port-speed $port [$switch]
switch control function get system-macaddress [$switch]
switch control function get system-name [$switch]
switch control function get system-uptime [$switch]
switch control function get vlan-access $port [$switch]
switch control function get vlan-id $vlan_register_num [$switch]
switch control function get vlan-multiple $port $group_num [$switch]
switch control function get vlan-multiple-use [$switch]
switch control function get vlan-port-mode $port [$switch]
switch control function get vlan-trunk $port $vlan_register_num [$switch]
switch control function set $function [$index ...] $value
switch control route backup $route $port
switch control watch interval $time [$count]
switch select $switch
tunnel disable $tunnel_num
tunnel enable $tunnel_num
tunnel encapsulation $type
tunnel endpoint address [$local] $remote
tunnel endpoint name [$local_name] $remote_name [$type]
upnp external address refer $interface
upnp external address refer pp $peer_num
upnp port mapping timer $time
upnp port mapping timer type $type
upnp syslog $syslog
upnp use $use
usbhost modem flow control $interface $sw
usbhost modem initialize $interface $command [$command_list]
vlan $interface/$sub_interface 802.1q vid=$vid [name=$name]
